{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      form: {},\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {},\n  methods: {\n    login() {\n      this.$refs['formRef'].validate(valid => {\n        if (valid) {\n          // 验证通过\n          this.$request.post('/login', this.form).then(res => {\n            if (res.code === '200') {\n              localStorage.setItem(\"xm-user\", JSON.stringify(res.data)); // 前端储存 在浏览器的 localStorage 中存储用户数据\n              if (res.data.role === 'NO') {\n                this.$message.warning('账号已停用，无法登录');\n                return;\n              }\n              this.$router.push('/'); // 跳转主页\n              this.$message.success('登录成功');\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","form","rules","username","required","message","trigger","password","created","methods","login","$refs","validate","valid","$request","post","then","res","code","localStorage","setItem","JSON","stringify","role","$message","warning","$router","push","success","error","msg"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div style=\"width: 400px; padding: 30px; background-color: white; border-radius: 5px;\">\r\n      <div style=\"text-align: center; font-size: 20px; margin-bottom: 20px; color: #333\">欢迎使用</div>\r\n      <div style=\"text-align: center; font-size: 20px; margin-bottom: 20px; color: #333\">医院预约挂号系统</div>\r\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input prefix-icon=\"el-icon-user\" placeholder=\"请输入账号\" v-model=\"form.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input prefix-icon=\"el-icon-lock\" placeholder=\"请输入密码\" show-password  v-model=\"form.password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-select v-model=\"form.role\" placeholder=\"请选择角色\" style=\"width: 100%\">\r\n            <el-option label=\"管理员\" value=\"ADMIN\"></el-option>\r\n            <el-option label=\"医护人员\" value=\"DOCTOR\"></el-option>\r\n            <el-option label=\"患者\" value=\"USER\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button style=\"width: 100%; background-color: #7eb488; border-color: #7eb488; color: white\" @click=\"login\">登 录</el-button>\r\n        </el-form-item>\r\n        <div style=\"display: flex; align-items: center\">\r\n          <div style=\"flex: 1\"></div>\r\n          <div style=\"flex: 1; text-align: right\">\r\n            还没有账号？请 <a href=\"/register\">注册</a>\r\n          </div>\r\n        </div>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Login\",\r\n  data() {\r\n    return {\r\n      form: {},\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '请输入账号', trigger: 'blur' },\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n\r\n  },\r\n  methods: {\r\n    login() {\r\n      this.$refs['formRef'].validate((valid) => {\r\n        if (valid) {\r\n          // 验证通过\r\n          this.$request.post('/login', this.form).then(res => {\r\n            if (res.code === '200') {\r\n              localStorage.setItem(\"xm-user\", JSON.stringify(res.data))  // 前端储存 在浏览器的 localStorage 中存储用户数据\r\n              if(res.data.role === 'NO'){\r\n                this.$message.warning('账号已停用，无法登录')\r\n                return\r\n              }\r\n              this.$router.push('/')  // 跳转主页\r\n              this.$message.success('登录成功')\r\n            } else {\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  min-height: 100vh;\r\n  overflow: hidden;\r\n  background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);\r\n  background-size: 400% 400%;\r\n  animation: gradientBG 15s ease infinite;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #666;\r\n  position: relative;\r\n}\r\n\r\n/* 渐变背景动画 */\r\n@keyframes gradientBG {\r\n  0% { background-position: 0% 50%; }\r\n  50% { background-position: 100% 50%; }\r\n  100% { background-position: 0% 50%; }\r\n}\r\n\r\n/* 添加字符背景 */\r\n.container::before {\r\n  content: '✚ 医 💊 + ♡ 💉 🏥';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  font-size: 30px;\r\n  letter-spacing: 20px;\r\n  line-height: 60px;\r\n  color: rgba(255, 255, 255, 0.1);\r\n  white-space: wrap;\r\n  pointer-events: none;\r\n  /* 重复字符模式 */\r\n  background-clip: border-box;\r\n  -webkit-background-clip: border-box;\r\n}\r\n\r\n/* 登录框样式 */\r\n.container > div:first-child {\r\n  position: relative;\r\n  z-index: 10;\r\n  width: 400px;\r\n  padding: 30px;\r\n  background-color: white;\r\n  border-radius: 5px;\r\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\r\n  backdrop-filter: blur(8px);\r\n  flex-shrink: 0;\r\n}\r\n\r\n/* 添加第二层字符，错开位置 */\r\n.container::after {\r\n  content: '+ ♡ 医 💊 ✚ 💉';\r\n  position: absolute;\r\n  top: 30px;  /* 错开位置 */\r\n  left: 30px; /* 错开位置 */\r\n  width: 100%;\r\n  height: 100%;\r\n  font-size: 30px;\r\n  letter-spacing: 20px;\r\n  line-height: 60px;\r\n  color: rgba(255, 255, 255, 0.1);\r\n  white-space: wrap;\r\n  pointer-events: none;\r\n  transform: rotate(15deg); /* 稍微旋转 */\r\n}\r\n\r\n/* 确保登录框内容正常显示 */\r\n.container > div:first-child * {\r\n  position: relative;\r\n  z-index: 11;\r\n}\r\n\r\n/* 响应式调整 */\r\n@media screen and (max-width: 500px) {\r\n  .container > div:first-child {\r\n    width: 90%;\r\n    padding: 20px;\r\n  }\r\n}\r\n</style>"],"mappings":";AAkCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,KAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,QAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAE,QAAA,GAEA;EACAC,OAAA;IACAC,MAAA;MACA,KAAAC,KAAA,YAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACA,KAAAC,QAAA,CAAAC,IAAA,gBAAAd,IAAA,EAAAe,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACAC,YAAA,CAAAC,OAAA,YAAAC,IAAA,CAAAC,SAAA,CAAAL,GAAA,CAAAjB,IAAA;cACA,IAAAiB,GAAA,CAAAjB,IAAA,CAAAuB,IAAA;gBACA,KAAAC,QAAA,CAAAC,OAAA;gBACA;cACA;cACA,KAAAC,OAAA,CAAAC,IAAA;cACA,KAAAH,QAAA,CAAAI,OAAA;YACA;cACA,KAAAJ,QAAA,CAAAK,KAAA,CAAAZ,GAAA,CAAAa,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}