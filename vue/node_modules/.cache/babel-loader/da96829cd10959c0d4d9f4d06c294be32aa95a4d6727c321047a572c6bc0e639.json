{"ast":null,"code":"export default {\n  name: \"Reserve\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      status: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {},\n      ids: []\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    call(row) {\n      let reserveData = JSON.parse(JSON.stringify(row));\n      reserveData.status = '已叫号';\n      this.$request.put('reserve/update', reserveData).then(res => {\n        if (res.code === '200') {\n          this.$message.success('叫号成功');\n          this.load(1);\n          //同步数据到record\n          this.record(row);\n        }\n      });\n    },\n    record(row) {\n      let data = {\n        userId: row.userId,\n        doctorId: row.doctorId\n      };\n      this.$request.post('/record/add', data).then(res => {\n        if (res.code === '200') {\n          this.$message.success('数据同步成功');\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定取消挂号吗？', '确认取消挂号', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/reserve/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/reserve/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/reserve/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          status: this.status\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.status = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","status","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","ids","created","load","methods","call","row","reserveData","stringify","$request","put","then","res","code","$message","success","record","userId","doctorId","post","error","msg","del","id","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","get","params","list","reset","handleCurrentChange"],"sources":["src/views/manager/Reserve.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search\">\r\n      <el-select v-model=\"status\" placeholder=\"请选择挂号状态\" style=\"width: 200px\">\r\n        <el-option label=\"已叫号\" value=\"\"></el-option>\r\n      </el-select>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n    \r\n\r\n    <div class=\"table\">\r\n      <el-table :data=\"tableData\" stripe >\r\n        <el-table-column prop=\"id\" label=\"序号\" width=\"80\" align=\"center\" sortable></el-table-column>\r\n        <el-table-column prop=\"userName\" label=\"患者姓名\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"doctorName\" label=\"医生姓名\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"time\" label=\"预约挂号时间\"></el-table-column>\r\n        <el-table-column prop=\"status\" label=\"挂号状态\"></el-table-column>\r\n\r\n        <el-table-column label=\"操作\" width=\"180\" align=\"center\">\r\n          <template v-slot=\"scope\" >\r\n            <el-button plain type=\"danger\" size=\"mini\" v-if=\"scope.row.status === '未叫号' && user.role === 'USER'\" @click=del(scope.row.id)>取消挂号</el-button>\r\n            <el-button plain type=\"warning\" size=\"mini\" v-if=\"user.role === 'DOCTOR'\"  @click=call(scope.row)>叫号</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[5, 10, 20]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, prev, pager, next\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Reserve\",\r\n  data() {\r\n    return {\r\n      tableData: [],  // 所有的数据\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 10,  // 每页显示的个数\r\n      total: 0,\r\n      status: null,\r\n      fromVisible: false,\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {},\r\n      ids: []\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n  },\r\n  methods: {\r\n    call(row){\r\n      let reserveData = JSON.parse(JSON.stringify(row));\r\n      reserveData.status = '已叫号'\r\n      this.$request.put('reserve/update', reserveData).then(res => {\r\n        if(res.code === '200'){\r\n          this.$message.success('叫号成功')\r\n          this.load(1)\r\n          //同步数据到record\r\n          this.record(row)\r\n        }\r\n      })\r\n    },\r\n    record(row){\r\n      let data = {\r\n        userId:row.userId,\r\n        doctorId:row.doctorId,\r\n      }\r\n      this.$request.post('/record/add', data).then(res => {\r\n        if(res.code === '200'){\r\n          this.$message.success('数据同步成功')\r\n        }else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    del(id) {   // 单个删除\r\n      this.$confirm('您确定取消挂号吗？', '确认取消挂号', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/reserve/delete/' + id).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.ids = rows.map(v => v.id)   //  [1,2]\r\n    },\r\n    delBatch() {   // 批量删除\r\n      if (!this.ids.length) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/reserve/delete/batch', {data: this.ids}).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    load(pageNum) {  // 分页查询\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/reserve/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          status: this.status,\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data?.list\r\n        this.total = res.data?.total\r\n      })\r\n    },\r\n    reset() {\r\n      this.status = null\r\n      this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"AA4CA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,KAAA;MACAC,MAAA;MACAC,WAAA;MACAC,IAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,KAAA;MACAC,GAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACAC,KAAAC,GAAA;MACA,IAAAC,WAAA,GAAAX,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAY,SAAA,CAAAF,GAAA;MACAC,WAAA,CAAAf,MAAA;MACA,KAAAiB,QAAA,CAAAC,GAAA,mBAAAH,WAAA,EAAAI,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAC,QAAA,CAAAC,OAAA;UACA,KAAAZ,IAAA;UACA;UACA,KAAAa,MAAA,CAAAV,GAAA;QACA;MACA;IACA;IACAU,OAAAV,GAAA;MACA,IAAAnB,IAAA;QACA8B,MAAA,EAAAX,GAAA,CAAAW,MAAA;QACAC,QAAA,EAAAZ,GAAA,CAAAY;MACA;MACA,KAAAT,QAAA,CAAAU,IAAA,gBAAAhC,IAAA,EAAAwB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAC,QAAA,CAAAC,OAAA;QACA;UACA,KAAAD,QAAA,CAAAM,KAAA,CAAAR,GAAA,CAAAS,GAAA;QACA;MACA;IACA;IACAC,IAAAC,EAAA;MAAA;MACA,KAAAC,QAAA;QAAAC,IAAA;MAAA,GAAAd,IAAA,CAAAe,QAAA;QACA,KAAAjB,QAAA,CAAAkB,MAAA,sBAAAJ,EAAA,EAAAZ,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAZ,IAAA;UACA;YACA,KAAAW,QAAA,CAAAM,KAAA,CAAAR,GAAA,CAAAS,GAAA;UACA;QACA;MACA,GAAAO,KAAA,QACA;IACA;IACAC,sBAAAC,IAAA;MAAA;MACA,KAAA7B,GAAA,GAAA6B,IAAA,CAAAC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAT,EAAA;IACA;;IACAU,SAAA;MAAA;MACA,UAAAhC,GAAA,CAAAiC,MAAA;QACA,KAAApB,QAAA,CAAAqB,OAAA;QACA;MACA;MACA,KAAAX,QAAA;QAAAC,IAAA;MAAA,GAAAd,IAAA,CAAAe,QAAA;QACA,KAAAjB,QAAA,CAAAkB,MAAA;UAAAxC,IAAA,OAAAc;QAAA,GAAAU,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAZ,IAAA;UACA;YACA,KAAAW,QAAA,CAAAM,KAAA,CAAAR,GAAA,CAAAS,GAAA;UACA;QACA;MACA,GAAAO,KAAA,QACA;IACA;IACAzB,KAAAd,OAAA;MAAA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAAoB,QAAA,CAAA2B,GAAA;QACAC,MAAA;UACAhD,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAE,MAAA,OAAAA;QACA;MACA,GAAAmB,IAAA,CAAAC,GAAA;QACA,KAAAxB,SAAA,GAAAwB,GAAA,CAAAzB,IAAA,EAAAmD,IAAA;QACA,KAAA/C,KAAA,GAAAqB,GAAA,CAAAzB,IAAA,EAAAI,KAAA;MACA;IACA;IACAgD,MAAA;MACA,KAAA/C,MAAA;MACA,KAAAW,IAAA;IACA;IACAqC,oBAAAnD,OAAA;MACA,KAAAc,IAAA,CAAAd,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}