{"ast":null,"code":"/*\r\n- class=\"avatar-uploader\": 自定义样式类名\r\n- :action: 上传到后端的地址\r\n- :show-file-list: 是否显示文件列表\r\n- :on-success: 上传成功后的回调函数\r\n\r\nv-if和v-else是条件判断，:src中的:是动态绑定，可自动解析对应的值而不是纯文本\r\nel-icon-plus内置样式（加号字符）+avatar-uploader-icon自定义样式\r\n\r\nprop绑定自定义的定义验证规则\r\nv-model双向绑定,当选择某个选项时，被选中选项的 value 值会自动赋值给绑定值\r\n\r\nel-form        // 表单容器\r\nel-form-item   // 表单项\r\nel-input       // 输入框\r\nel-button      // 按钮\r\nel-select      // 下拉选择框\r\n*/\n\nexport default {\n  //导出模块语法\n  name: \"UserPerson\",\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      fromVisible: false,\n      account: null,\n      form: {\n        amount: '',\n        payType: 'wechat'\n      },\n      rules: {\n        amount: [{\n          required: true,\n          message: '请输入充值金额',\n          trigger: 'blur'\n        }, {\n          pattern: /^[1-9]\\d*(\\.\\d{1,2})?$/,\n          message: '请输入正确的金额格式',\n          trigger: 'blur'\n        }],\n        payType: [{\n          required: true,\n          message: '请选择支付方式',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  created() {\n    this.getPerson(); //实时更新\n  },\n\n  methods: {\n    getPerson() {\n      this.$request.get('user/selectById/' + this.user.id).then(res => {\n        //退款的实时更新\n        if (res.code === '200') {\n          this.user = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    recharge() {\n      this.account = 100;\n      this.fromVisible = true;\n    },\n    // save() {\n    //   if(!this.account){\n    //     this.$message.warning('请输入充值金额')\n    //     return\n    //   }\n    //   this.user.account = parseFloat(this.user.account) + parseFloat(this.account)\n    //   this.update()\n    // },\n\n    save() {\n      this.$refs['formRef'].validate(valid => {\n        if (valid) {\n          // 这里可以调用支付接口\n          this.user.account = parseFloat(this.user.account) + parseFloat(this.form.amount);\n          this.update();\n        }\n      });\n    },\n    update() {\n      // 保存当前的用户信息到数据库   实际完整地址前面已配置http://localhost:8080/user/update\n      this.$request.put('/user/update', this.user).then(res => {\n        //发送请求到后端// 处理后端响应res储存\n        if (res.code === '200') {\n          // 判断是否成功\n          this.fromVisible = false; //输入框消失\n          this.$message.success('保存成功'); // 显示成功提示\n\n          // 更新浏览器缓存里的用户信息\n          localStorage.setItem('xm-user', JSON.stringify(this.user));\n\n          // 触发父级的数据更新\n          this.$emit('update:user');\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      // 把user的头像属性换成上传的图片的链接\n      this.$set(this.user, 'avatar', response.data);\n      // this.user: 要更新的对象\n      // 'avatar': 要更新的属性名\n      // response.data: 新的头像链接\n      //普通赋值：在笔记本上写字\n      //$set：在笔记本上写字，并确保所有看这个笔记本的人都能看到更\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","JSON","parse","localStorage","getItem","fromVisible","account","form","amount","payType","rules","required","message","trigger","pattern","created","getPerson","methods","$request","get","id","then","res","code","$message","error","msg","recharge","save","$refs","validate","valid","parseFloat","update","put","success","setItem","stringify","$emit","handleAvatarSuccess","response","file","fileList","$set"],"sources":["src/views/manager/UserPerson.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-card style=\"width: 50%\">\r\n      <el-form :model=\"user\" label-width=\"100px\" style=\"padding-right: 50px\">\r\n        <div style=\"margin: 15px; text-align: center\">\r\n          <el-upload\r\n              class=\"avatar-uploader\"\r\n              :action=\"$baseUrl + '/files/upload'\"\r\n              :show-file-list=\"false\"\r\n              :on-success=\"handleAvatarSuccess\"\r\n          >\r\n            <img v-if=\"user.avatar\" :src=\"user.avatar\" class=\"avatar\" />\r\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n          </el-upload>\r\n        </div>\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"user.username\" placeholder=\"用户名\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"姓名\" prop=\"name\">\r\n          <el-input v-model=\"user.name\" placeholder=\"姓名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"电话\" prop=\"phone\">\r\n          <el-input v-model=\"user.phone\" placeholder=\"电话\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"user.email\" placeholder=\"邮箱\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"余额\" prop=\"account\">\r\n          <el-input v-model=\"user.account\" disabled></el-input>\r\n        </el-form-item>\r\n        <div style=\"text-align: center; margin-bottom: 20px\">\r\n          <el-button type=\"primary\" @click=\"update\">保 存</el-button>\r\n          <el-button type=\"warning\" @click=\"recharge\">充 值</el-button>\r\n        </div>\r\n      </el-form>\r\n    </el-card>\r\n<!--    <el-dialog title=\"充值金额\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>-->\r\n<!--      <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">-->\r\n<!--        <el-form-item prop=\"title\" label=\"输入金额\">-->\r\n<!--          <el-input v-model=\"account\" autocomplete=\"off\"></el-input>-->\r\n<!--        </el-form-item>-->\r\n<!--      </el-form>-->\r\n<!--      <div slot=\"footer\" class=\"dialog-footer\">-->\r\n<!--        <el-button @click=\"fromVisible = false\">取 消</el-button>-->\r\n<!--        <el-button type=\"primary\" @click=\"save\">确 定</el-button>-->\r\n<!--      </div>-->\r\n<!--    </el-dialog>-->\r\n\r\n\r\n    <!-- 修改充值对话框部分 -->\r\n    <el-dialog title=\"充值\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n        <!-- 金额输入 -->\r\n        <el-form-item prop=\"amount\" label=\"充值金额\">\r\n          <el-input v-model=\"form.amount\" placeholder=\"请输入充值金额\">\r\n            <template slot=\"append\">元</template>\r\n          </el-input>\r\n        </el-form-item>\r\n\r\n        <!-- 快捷金额选择 -->\r\n        <el-form-item label=\"快捷金额\">\r\n          <el-radio-group v-model=\"form.amount\">\r\n            <el-radio-button label=\"50\">50元</el-radio-button>\r\n            <el-radio-button label=\"100\">100元</el-radio-button>\r\n            <el-radio-button label=\"200\">200元</el-radio-button>\r\n            <el-radio-button label=\"500\">500元</el-radio-button>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n\r\n        <!-- 支付方式 -->\r\n        <el-form-item prop=\"payType\" label=\"支付方式\">\r\n          <div class=\"pay-methods\">\r\n            <div\r\n                class=\"pay-method-item\"\r\n                :class=\"{ active: form.payType === 'wechat' }\"\r\n                @click=\"form.payType = 'wechat'\"\r\n            >\r\n              <i class=\"el-icon-money\" style=\"color: #67C23A; font-size: 20px;\"></i>\r\n              <span>微信支付</span>\r\n            </div>\r\n            <div\r\n                class=\"pay-method-item\"\r\n                :class=\"{ active: form.payType === 'alipay' }\"\r\n                @click=\"form.payType = 'alipay'\"\r\n            >\r\n              <i class=\"el-icon-money\" style=\"color: #409EFF; font-size: 20px;\"></i>\r\n              <span>支付宝支付</span>\r\n            </div>\r\n          </div>\r\n        </el-form-item>\r\n\r\n        <!-- 二维码区域 -->\r\n        <el-form-item v-if=\"form.amount && form.payType\" label=\"支付二维码\">\r\n          <div class=\"qr-code-container\">\r\n            <div class=\"qr-code-box\">\r\n              <img src=\"https://example.com/qr-code.png\" alt=\"支付二维码\" class=\"qr-code\">\r\n              <div class=\"qr-tip\">\r\n                <p>请使用{{ form.payType === 'wechat' ? '微信' : '支付宝' }}扫码支付</p>\r\n                <p class=\"amount\">￥{{ form.amount }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/*\r\n- class=\"avatar-uploader\": 自定义样式类名\r\n- :action: 上传到后端的地址\r\n- :show-file-list: 是否显示文件列表\r\n- :on-success: 上传成功后的回调函数\r\n\r\nv-if和v-else是条件判断，:src中的:是动态绑定，可自动解析对应的值而不是纯文本\r\nel-icon-plus内置样式（加号字符）+avatar-uploader-icon自定义样式\r\n\r\nprop绑定自定义的定义验证规则\r\nv-model双向绑定,当选择某个选项时，被选中选项的 value 值会自动赋值给绑定值\r\n\r\nel-form        // 表单容器\r\nel-form-item   // 表单项\r\nel-input       // 输入框\r\nel-button      // 按钮\r\nel-select      // 下拉选择框\r\n*/\r\n\r\nexport default {  //导出模块语法\r\n  name: \"UserPerson\",\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      fromVisible: false,\r\n      account: null,\r\n\r\n      form: {\r\n        amount: '',\r\n        payType: 'wechat'\r\n      },\r\n      rules: {\r\n        amount: [\r\n          { required: true, message: '请输入充值金额', trigger: 'blur' },\r\n          { pattern: /^[1-9]\\d*(\\.\\d{1,2})?$/, message: '请输入正确的金额格式', trigger: 'blur' }\r\n        ],\r\n        payType: [\r\n          { required: true, message: '请选择支付方式', trigger: 'change' }\r\n        ]\r\n      }\r\n\r\n    }\r\n  },\r\n  created() {\r\n    this.getPerson()  //实时更新\r\n  },\r\n  methods: {\r\n    getPerson(){\r\n      this.$request.get('user/selectById/' + this.user.id).then(res => {    //退款的实时更新\r\n        if(res.code === '200'){\r\n          this.user = res.data\r\n        }else{\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    recharge(){\r\n      this.account = 100\r\n      this.fromVisible = true\r\n    },\r\n    // save() {\r\n    //   if(!this.account){\r\n    //     this.$message.warning('请输入充值金额')\r\n    //     return\r\n    //   }\r\n    //   this.user.account = parseFloat(this.user.account) + parseFloat(this.account)\r\n    //   this.update()\r\n    // },\r\n\r\n    save() {\r\n      this.$refs['formRef'].validate((valid) => {\r\n        if (valid) {\r\n          // 这里可以调用支付接口\r\n          this.user.account = parseFloat(this.user.account) + parseFloat(this.form.amount)\r\n          this.update()\r\n        }\r\n      })\r\n    },\r\n\r\n    update() {\r\n      // 保存当前的用户信息到数据库   实际完整地址前面已配置http://localhost:8080/user/update\r\n      this.$request.put('/user/update', this.user).then(res => {   //发送请求到后端// 处理后端响应res储存\r\n        if (res.code === '200') {             // 判断是否成功\r\n          this.fromVisible = false   //输入框消失\r\n          this.$message.success('保存成功')     // 显示成功提示\r\n\r\n          // 更新浏览器缓存里的用户信息\r\n          localStorage.setItem('xm-user', JSON.stringify(this.user))\r\n\r\n          // 触发父级的数据更新\r\n          this.$emit('update:user')\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    handleAvatarSuccess(response, file, fileList) {\r\n      // 把user的头像属性换成上传的图片的链接\r\n      this.$set(this.user, 'avatar', response.data)\r\n      // this.user: 要更新的对象\r\n      // 'avatar': 要更新的属性名\r\n      // response.data: 新的头像链接\r\n      //普通赋值：在笔记本上写字\r\n      //$set：在笔记本上写字，并确保所有看这个笔记本的人都能看到更\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/deep/.el-form-item__label {\r\n  font-weight: bold;\r\n}\r\n/deep/.el-upload {\r\n  border-radius: 50%;\r\n}\r\n/deep/.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: 50%;\r\n}\r\n/deep/.avatar-uploader .el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 120px;\r\n  height: 120px;\r\n  line-height: 120px;\r\n  text-align: center;\r\n  border-radius: 50%;\r\n}\r\n.avatar {\r\n  width: 120px;\r\n  height: 120px;\r\n  display: block;\r\n  border-radius: 50%;\r\n}\r\n\r\n\r\n\r\n.pay-methods {\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\n.pay-method-item {\r\n  flex: 1;\r\n  height: 50px;\r\n  border: 1px solid #DCDFE6;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.pay-method-item:hover {\r\n  border-color: #409EFF;\r\n}\r\n\r\n.pay-method-item.active {\r\n  border-color: #409EFF;\r\n  background-color: #F5F7FA;\r\n}\r\n\r\n.qr-code-container {\r\n  text-align: center;\r\n  padding: 20px;\r\n  background: #f5f7fa;\r\n  border-radius: 4px;\r\n}\r\n\r\n.qr-code-box {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 15px;\r\n}\r\n\r\n.qr-code {\r\n  width: 200px;\r\n  height: 200px;\r\n  object-fit: contain;\r\n}\r\n\r\n.qr-tip {\r\n  color: #606266;\r\n  text-align: center;\r\n}\r\n\r\n.amount {\r\n  font-size: 20px;\r\n  color: #F56C6C;\r\n  font-weight: bold;\r\n  margin-top: 5px;\r\n}\r\n</style>\r\n\r\n\r\n"],"mappings":"AAqHA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;EAAA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,WAAA;MACAC,OAAA;MAEAC,IAAA;QACAC,MAAA;QACAC,OAAA;MACA;MACAC,KAAA;QACAF,MAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,OAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,OAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IAEA;EACA;EACAE,QAAA;IACA,KAAAC,SAAA;EACA;;EACAC,OAAA;IACAD,UAAA;MACA,KAAAE,QAAA,CAAAC,GAAA,2BAAAnB,IAAA,CAAAoB,EAAA,EAAAC,IAAA,CAAAC,GAAA;QAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAvB,IAAA,GAAAsB,GAAA,CAAAvB,IAAA;QACA;UACA,KAAAyB,QAAA,CAAAC,KAAA,CAAAH,GAAA,CAAAI,GAAA;QACA;MACA;IACA;IACAC,SAAA;MACA,KAAArB,OAAA;MACA,KAAAD,WAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAuB,KAAA;MACA,KAAAC,KAAA,YAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACA,KAAA/B,IAAA,CAAAM,OAAA,GAAA0B,UAAA,MAAAhC,IAAA,CAAAM,OAAA,IAAA0B,UAAA,MAAAzB,IAAA,CAAAC,MAAA;UACA,KAAAyB,MAAA;QACA;MACA;IACA;IAEAA,OAAA;MACA;MACA,KAAAf,QAAA,CAAAgB,GAAA,sBAAAlC,IAAA,EAAAqB,IAAA,CAAAC,GAAA;QAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UAAA;UACA,KAAAlB,WAAA;UACA,KAAAmB,QAAA,CAAAW,OAAA;;UAEA;UACAhC,YAAA,CAAAiC,OAAA,YAAAnC,IAAA,CAAAoC,SAAA,MAAArC,IAAA;;UAEA;UACA,KAAAsC,KAAA;QACA;UACA,KAAAd,QAAA,CAAAC,KAAA,CAAAH,GAAA,CAAAI,GAAA;QACA;MACA;IACA;IACAa,oBAAAC,QAAA,EAAAC,IAAA,EAAAC,QAAA;MACA;MACA,KAAAC,IAAA,MAAA3C,IAAA,YAAAwC,QAAA,CAAAzC,IAAA;MACA;MACA;MACA;MACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}