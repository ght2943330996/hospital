{"ast":null,"code":"export default {\n  //这是代码执行的第一步\n  name: \"Doctor\",\n  // computed: {\n  //   department() {\n  //     return department\n  //   }\n  // },\n  // 1. 组件创建，执行 data 函数\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      departmentId: null,\n      week: null,\n      fromVisible: false,\n      role: 'DOCTOR',\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {},\n      ids: [],\n      //创建用于存储批量选择的ID的空数组\n      departmentData: [] //创建用于存储所有部门数据的空数组，后面方便vue渲染\n    };\n  },\n\n  // 2. 执行 created 钩子\n  // created 是 Vue 的生命周期钩子，在组件创建时自动执行\n  created() {\n    this.load(1); // 加载医生数据\n    this.loaddepartment(); // 加载部门数据    //// 获取数据\n  },\n\n  methods: {\n    reserve(doctorId) {\n      let data = {\n        userId: this.user.id,\n        doctorId: doctorId,\n        week: this.week\n      };\n      this.$request.post('reserve/add', data).then(res => {\n        if (res.code === '200') {\n          this.$message.success('挂号成功');\n          this.load(1);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    // 加载部门数据的方法\n    loaddepartment() {\n      // 发送 GET 请求到后端获取所有部门数据\n      this.$request.get('/department/selectAll').then(res => {\n        if (res.code === '200') {\n          this.departmentData = res.data; // 如果请求成功，将数据保存到 departmentData\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/doctor/update' : '/doctor/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/doctor/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/doctor/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/doctor/selectPage2', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          role: this.role,\n          departmentId: this.departmentId,\n          week: this.week\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.departmentId = null;\n      this.week = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      // 把头像属性换成上传的图片的链接\n      this.form.avatar = response.data;\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","departmentId","week","fromVisible","role","form","user","JSON","parse","localStorage","getItem","rules","ids","departmentData","created","load","loaddepartment","methods","reserve","doctorId","userId","id","$request","post","then","res","code","$message","success","error","msg","get","handleAdd","handleEdit","row","stringify","save","$refs","formRef","validate","valid","url","method","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","params","list","reset","handleCurrentChange","handleAvatarSuccess","file","fileList","avatar"],"sources":["src/views/manager/DoctorCard.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search\">\r\n      科室\r\n      <el-select v-model=\"departmentId\" placeholder=\"请选择科室\">\r\n        <el-option\r\n            v-for=\"item in departmentData\"\r\n            :key=\"item.id\"\r\n            :label=\"item.name\"\r\n            :value=\"item.id\">\r\n        </el-option>\r\n      </el-select>\r\n      时间\r\n      <el-date-picker\r\n          v-model=\"week\"\r\n          type=\"date\"\r\n          value-format=\"yyyy-MM-dd\"\r\n          placeholder=\"选择日期\">\r\n      </el-date-picker>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n\r\n\r\n    <div class=\"table\" style=\"padding: 15px 20px\">\r\n\r\n      <!-- 当没有数据时显示提示信息 -->\r\n      <template>\r\n        <div v-if=\"!tableData || tableData.length === 0\" class=\"empty-container\">\r\n          <el-empty>\r\n            <template slot=\"description\">\r\n              <p class=\"empty-text\">请先选择科室和日期</p>\r\n            </template>\r\n          </el-empty>\r\n        </div>\r\n      </template>\r\n\r\n\r\n<!--      <el-row :gutter=\"20\">-->\r\n<!--        <el-col :span=\"6\" v-for=\"item in tableData\" style=\"margin-bottom: 20px\">-->\r\n<!--          <div style=\"text-align: center; background-color: #c5cefa\" class=\"card\" >-->\r\n<!--            <img :src=\"item.avatar\" alt=\"\" style=\"width: 100px; height: 100px;border-radius:50%\">-->\r\n<!--            <div style=\"font-weight: 550; margin-top: 10px\">-->\r\n<!--              {{item.name}} <span style=\"color: #383535; margin-left: 5px; font-weight: 500\">{{item.departmentName}}</span>-->\r\n<!--            </div>-->\r\n<!--            <div style=\"margin-top: 20px; color: #353523; padding: 0 10px; text-align: left;overflow: hidden;text-overflow: ellipsis;display: -webkit-box;-webkit-box-orient: vertical;-webkit-line-clamp:4;\">-->\r\n<!--              简介：{{item.descr}}-->\r\n<!--            </div>-->\r\n<!--            <div style=\"margin-top: 15px\">-->\r\n<!--              挂号费：<span style=\"color: red; font-weight: 550; margin-right: 20px\">￥{{item.price}}</span> 剩余：{{item.num}}-->\r\n<!--            </div>-->\r\n<!--            <div style=\"margin-top: 15px\">-->\r\n<!--              <el-button type=\"primary\" size=\"mini\" @click=\"reserve(item.id)\">挂号</el-button>-->\r\n<!--            </div>-->\r\n<!--          </div>-->\r\n<!--        </el-col>-->\r\n<!--      </el-row>-->\r\n      <template>\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"6\" v-for=\"item in tableData\" style=\"margin-bottom: 20px\">\r\n            <div class=\"card\">\r\n              <img :src=\"item.avatar\" alt=\"\" style=\"width: 100px; height: 100px;border-radius:50%\">\r\n              <div style=\"font-weight: 550; margin-top: 10px\">\r\n                {{item.name}} <span style=\"color: #383535; margin-left: 5px; font-weight: 500\">{{item.departmentName}}</span>\r\n              </div>\r\n              <div style=\"margin-top: 20px; color: #353523; padding: 0 10px; text-align: left;overflow: hidden;text-overflow: ellipsis;display: -webkit-box;-webkit-box-orient: vertical;-webkit-line-clamp:4;\">\r\n                简介：{{item.descr}}\r\n              </div>\r\n              <div style=\"margin-top: 15px\">\r\n                挂号费：<span style=\"color: red; font-weight: 550; margin-right: 20px\">￥{{item.price}}</span> 剩余：{{item.num}}\r\n              </div>\r\n              <div style=\"margin-top: 15px\">\r\n                <el-button type=\"primary\" size=\"mini\" @click=\"reserve(item.id)\">挂号</el-button>\r\n              </div>\r\n            </div>\r\n          </el-col>\r\n        </el-row>\r\n      </template>\r\n\r\n\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[5, 10, 20]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, prev, pager, next\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n<!--    <div><el-input v-model=\"role\" value=\"DOCTOR\" v-show=\"false\"></el-input></div>-->\r\n\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {     //这是代码执行的第一步\r\n  name: \"Doctor\",\r\n  // computed: {\r\n  //   department() {\r\n  //     return department\r\n  //   }\r\n  // },\r\n  // 1. 组件创建，执行 data 函数\r\n  data() {\r\n    return {\r\n      tableData: [],  // 所有的数据\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 10,  // 每页显示的个数\r\n      total: 0,\r\n      departmentId:null,\r\n      week: null,\r\n      fromVisible: false,\r\n      role:'DOCTOR',\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {},\r\n      ids: [],     //创建用于存储批量选择的ID的空数组\r\n      departmentData: []     //创建用于存储所有部门数据的空数组，后面方便vue渲染\r\n    }\r\n  },\r\n  // 2. 执行 created 钩子\r\n  // created 是 Vue 的生命周期钩子，在组件创建时自动执行\r\n  created() {\r\n    this.load(1)      // 加载医生数据\r\n    this.loaddepartment()      // 加载部门数据    //// 获取数据\r\n  },\r\n  methods: {\r\n    reserve(doctorId){\r\n      let data = {\r\n        userId: this.user.id,\r\n        doctorId: doctorId,\r\n        week:this.week,\r\n      }\r\n      this.$request.post('reserve/add', data).then(res => {\r\n        if(res.code === '200'){\r\n          this.$message.success('挂号成功')\r\n          this.load(1)\r\n        }else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    // 加载部门数据的方法\r\n    loaddepartment(){\r\n      // 发送 GET 请求到后端获取所有部门数据\r\n      this.$request.get('/department/selectAll').then(res =>{\r\n        if(res.code === '200'){\r\n          this.departmentData = res.data    // 如果请求成功，将数据保存到 departmentData\r\n        }else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    handleAdd() {   // 新增数据\r\n      this.form = {}  // 新增数据的时候清空数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    handleEdit(row) {   // 编辑数据\r\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.$request({\r\n            url: this.form.id ? '/doctor/update' : '/doctor/add',\r\n            method: this.form.id ? 'PUT' : 'POST',\r\n            data: this.form\r\n          }).then(res => {\r\n            if (res.code === '200') {  // 表示成功保存\r\n              this.$message.success('保存成功')\r\n              this.load(1)\r\n              this.fromVisible = false\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    del(id) {   // 单个删除\r\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/doctor/delete/' + id).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.ids = rows.map(v => v.id)\r\n    },\r\n    delBatch() {   // 批量删除\r\n      if (!this.ids.length) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/doctor/delete/batch', {data: this.ids}).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    load(pageNum) {  // 分页查询\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/doctor/selectPage2', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          role: this.role,\r\n          departmentId: this.departmentId,\r\n          week: this.week,\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data?.list\r\n        this.total = res.data?.total\r\n      })\r\n    },\r\n    reset() {\r\n      this.departmentId = null\r\n      this.week = null\r\n      this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n    handleAvatarSuccess(response, file, fileList) {\r\n      // 把头像属性换成上传的图片的链接\r\n      this.form.avatar = response.data\r\n    },\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.empty-container {\r\n  text-align: center;\r\n  padding: 80px 50px;  /* 增加垂直内边距 */\r\n  background-color: #f8f9fa;  /* 添加背景色 */\r\n  border-radius: 8px;  /* 圆角边框 */\r\n}\r\n\r\n.empty-text {\r\n  font-size: 50px;  /* 更大的字体 */\r\n  font-weight: 600;\r\n  color: #409EFF;\r\n  margin: 20px 0;\r\n  letter-spacing: 2px;  /* 字间距 */\r\n  /* 添加渐变色文字效果 */\r\n  background: linear-gradient(45deg, #409EFF, #36cfc9);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  /* 添加动画效果 */\r\n  animation: fadeIn 0.5s ease-in;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(-20px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n\r\n//挂号牌子\r\n.card {\r\n  text-align: center;\r\n  background-color: #c5cefa;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  transition: all 0.3s ease;\r\n  cursor: pointer;\r\n  height: 380px;\r\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\r\n}\r\n\r\n.card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 6px 20px rgba(0,0,0,0.15);\r\n  background-color: #d5defa;\r\n}\r\n\r\n.card img {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.card:hover img {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.card .el-button {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.card:hover .el-button {\r\n  transform: scale(1.05);\r\n  box-shadow: 0 2px 12px rgba(64, 158, 255, 0.3);\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}