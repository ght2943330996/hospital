{"ast":null,"code":"import scoped from \"vue/packages/compiler-sfc/src/stylePlugins/scoped\";\n//数据流程\n// 初始化\n// ↓\n// 调用 load(1)\n// ↓\n// 发送 HTTP 请求到后端\n// ↓\n// 后端返回数据 (包含 list 和 total)\n// ↓\n// 数据保存到 tableData\n// ↓\n// el-table 自动遍历 tableData\n// ↓\n// 每行数据通过 prop 显示在对应列\n// ↓\n// 用户操作（搜索、翻页等）触发 load\n// ↓\n// 重复以上过程\n\nexport default {\n  name: \"Registration\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      userName: null,\n      fromVisible: false,\n      form: {},\n      // 从 localStorage 中获取用户信息，如果没有则返回空对象\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        title: [{\n          required: true,\n          message: '请输入标题',\n          trigger: 'blur'\n        }],\n        content: [{\n          required: true,\n          message: '请输入内容',\n          trigger: 'blur'\n        }]\n      },\n      ids: []\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    pay(row) {\n      let data = {\n        id: row.id,\n        userId: this.user.id,\n        price: row.price\n      };\n      this.$request.put('registration/pay', data).then(res => {\n        if (res.code === '200') {\n          this.$message.success('支付成功');\n          this.load(1);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/registration/update' : '/registration/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/registration/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/registration/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/registration/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          userName: this.userName\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.userName = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["scoped","name","data","tableData","pageNum","pageSize","total","userName","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","title","required","message","trigger","content","ids","created","load","methods","pay","row","id","userId","price","$request","put","then","res","code","$message","success","error","msg","handleAdd","handleEdit","stringify","save","$refs","formRef","validate","valid","url","method","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","get","params","list","reset","handleCurrentChange"],"sources":["src/views/manager/Registration.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search\">\r\n      <el-input placeholder=\"请输入患者姓名\" style=\"width: 200px\" v-model=\"userName\"></el-input>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n\r\n    <div class=\"table\">\r\n      <el-table :data=\"tableData\" stripe  @selection-change=\"handleSelectionChange\">\r\n        <!-- 表格会自动遍历 tableData 数组中的每一项数据 -->\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"id\" label=\"序号\" width=\"80\" align=\"center\" sortable></el-table-column>\r\n        <el-table-column prop=\"userName\" label=\"患者姓名\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"hosStatus\" label=\"住院状态\"></el-table-column>\r\n        <el-table-column prop=\"room\" label=\"房号\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"price\" label=\"费用\"></el-table-column>\r\n        <el-table-column prop=\"status\" label=\"缴费状态\"></el-table-column>\r\n        <el-table-column prop=\"health\" label=\"是否医保\"></el-table-column>\r\n\r\n        <el-table-column label=\"操作\" width=\"180\" align=\"center\" v-if=\"user.role === 'ADMIN'\">\r\n          <template v-slot=\"scope\">\r\n            <el-button plain type=\"primary\" @click=\"handleEdit(scope.row)\" size=\"mini\">编辑</el-button>\r\n            <el-button plain type=\"danger\" size=\"mini\" @click=del(scope.row.id)>删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"180\" align=\"center\" v-if=\"user.role === 'USER'\">\r\n          <template v-slot=\"scope\">\r\n            <el-button plain type=\"success\" size=\"mini\" @click=pay(scope.row) v-if=\"scope.row.status === '未缴费'\">去缴费</el-button>\r\n            <el-button plain type=\"primary\" size=\"mini\" v-if=\"scope.row.status === '已缴费'\" disabled>已支付</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[5, 10, 20]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, prev, pager, next\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <el-dialog title=\"信息\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item prop=\"room\" label=\"房号\">\r\n          <el-input v-model=\"form.room\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"price\" label=\"费用\">\r\n          <el-input v-model=\"form.price\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"status\" label=\"缴费状态\">\r\n          <el-select v-model=\"form.status\" placeholder=\"请选择状态\" style=\"width: 100%\">\r\n            <el-option label=\"已缴费\" value=\"已缴费\"></el-option>\r\n            <el-option label=\"未缴费\" value=\"未缴费\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item prop=\"health\" label=\"是否医保\">\r\n          <el-select v-model=\"form.health\" placeholder=\"请选择\" style=\"width: 100%\">\r\n            <el-option label=\"是\" value=\"是\"></el-option>\r\n            <el-option label=\"否\" value=\"否\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item prop=\"hosStatus\" label=\"住院状态\">\r\n          <el-select v-model=\"form.hosStatus\" placeholder=\"请选择状态\" style=\"width: 100%\">\r\n            <el-option label=\"住院中\" value=\"住院中\"></el-option>\r\n            <el-option label=\"已出院\" value=\"已出院\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport scoped from \"vue/packages/compiler-sfc/src/stylePlugins/scoped\";\r\n//数据流程\r\n// 初始化\r\n// ↓\r\n// 调用 load(1)\r\n// ↓\r\n// 发送 HTTP 请求到后端\r\n// ↓\r\n// 后端返回数据 (包含 list 和 total)\r\n// ↓\r\n// 数据保存到 tableData\r\n// ↓\r\n// el-table 自动遍历 tableData\r\n// ↓\r\n// 每行数据通过 prop 显示在对应列\r\n// ↓\r\n// 用户操作（搜索、翻页等）触发 load\r\n// ↓\r\n// 重复以上过程\r\n\r\nexport default {\r\n  name: \"Registration\",\r\n  data() {\r\n    return {\r\n      tableData: [],  // 所有的数据\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 10,  // 每页显示的个数\r\n      total: 0,\r\n      userName: null,\r\n      fromVisible: false,\r\n      form: {},\r\n      // 从 localStorage 中获取用户信息，如果没有则返回空对象\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {\r\n        title: [\r\n          {required: true, message: '请输入标题', trigger: 'blur'},\r\n        ],\r\n        content: [\r\n          {required: true, message: '请输入内容', trigger: 'blur'},\r\n        ]\r\n      },\r\n      ids: []\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n  },\r\n  methods: {\r\n    pay(row){\r\n      let data = {\r\n        id: row.id,\r\n        userId: this.user.id,\r\n        price: row.price,\r\n      }\r\n      this.$request.put('registration/pay' , data).then(res => {\r\n        if(res.code === '200'){\r\n          this.$message.success('支付成功')\r\n          this.load(1)\r\n        }else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    handleAdd() {   // 新增数据\r\n      this.form = {}  // 新增数据的时候清空数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    handleEdit(row) {   // 编辑数据\r\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.$request({\r\n            url: this.form.id ? '/registration/update' : '/registration/add',\r\n            method: this.form.id ? 'PUT' : 'POST',\r\n            data: this.form\r\n          }).then(res => {\r\n            if (res.code === '200') {  // 表示成功保存\r\n              this.$message.success('保存成功')\r\n              this.load(1)\r\n              this.fromVisible = false\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    del(id) {   // 单个删除\r\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/registration/delete/' + id).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.ids = rows.map(v => v.id)   //  [1,2]\r\n    },\r\n    delBatch() {   // 批量删除\r\n      if (!this.ids.length) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/registration/delete/batch', {data: this.ids}).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    load(pageNum) {  // 分页查询\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/registration/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          userName: this.userName,\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data?.list\r\n        this.total = res.data?.total\r\n      })\r\n    },\r\n    reset() {\r\n      this.userName = null\r\n      this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}